SQuAD: 100,000+ Questions for Machine Comprehension of Text

Pranav Rajpurkar and Jian Zhang and Konstantin Lopyrev and Percy Liang
{pranavsr,zjian,klopyrev,pliang}@cs.stanford.edu

Computer Science Department
Stanford University

Abstract
In meteorology, precipitation is any product

of the condensation of atmospheric water vapor
We present the Stanford Question Answer- that falls under gravity. The main forms of pre-
ing Dataset (SQuAD), a new reading compre- cipitation include drizzle, rain, sleet, snow, grau-
hension dataset consisting of 100,000+ ques- pel and hail... Precipitation forms as smaller
tions posed by crowdworkers on a set of droplets coalesce via collision with other rain
Wikipedia articles, where the answer to each drops or ice crystals within a cloud. Short, in-
question is a segment of text from the cor- tense periods of rain in scattered locations are

responding reading passage. We analyze the called “showers”.

dataset to understand the types of reason- What causes precipitation to fall?
ing required to answer the questions, lean- gravity
ing heavily on dependency and constituency
trees. We build a strong logistic regression What is another main form of precipitation be-

model, which achieves an F1 score of 51.0%, sides drizzle, rain, snow, sleet and hail?

a significant improvement over a simple base- graupel

line (20%). However, human performance Where do water droplets collide with ice crystals
(86.8%) is much higher, indicating that the to form precipitation?
dataset presents a good challenge problem for within a cloud
future research. The dataset is freely available
at https://stanford-qa.com. Figure 1: Question-answer pairs for a sample passage in the

SQuAD dataset. Each of the answers is a segment of text from
1 Introduction the passage.

Reading Comprehension (RC), or the ability to read
text and then answer questions about it, is a chal- a critical role for driving fields forward—famous
lenging task for machines, requiring both under- examples include ImageNet for object recognition
standing of natural language and knowledge about (Deng et al., 2009) and the Penn Treebank for
the world. Consider the question “what causes pre- syntactic parsing (Marcus et al., 1993). Existing
cipitation to fall?” posed on the passage in Figure 1. datasets for RC have one of two shortcomings: (i)
In order to answer the question, one might first lo- those that are high in quality (Richardson et al.,
cate the relevant part of the passage “precipitation ... 2013; Berant et al., 2014) are too small for training
falls under gravity”, then reason that “under” refers modern data-intensive models, while (ii) those that
to a cause (not location), and thus determine the cor- are large (Hermann et al., 2015; Hill et al., 2015) are
rect answer: “gravity”. semi-synthetic and do not share the same character-

How can we get a machine to make progress istics as explicit reading comprehension questions.
on the challenging task of reading comprehension? To address the need for a large and high-quality
Historically, large, realistic datasets have played reading comprehension dataset, we present the Stan-

arXiv:1606.05250v3  [cs.CL]  11 Oct 2016



ford Question Answering Dataset v1.0 (SQuAD), Dataset Question Formulation Size

freely available at https://stanford-qa.com, con- source

sisting of questions posed by crowdworkers on a SQuAD crowdsourced RC, spans 100K
in passage

set of Wikipedia articles, where the answer to ev-
MCTest crowdsourced RC, multiple 2640

ery question is a segment of text, or span, from the (Richardson et al., 2013) choice
corresponding reading passage. SQuAD contains Algebra standardized computation 514

(Kushman et al., 2014)
107,785 question-answer pairs on 536 articles, and tests

Science standardized reasoning, 855
is almost two orders of magnitude larger than previ- (Clark and Etzioni, 2016) tests multiple
ous manually labeled RC datasets such as MCTest choice

(Richardson et al., 2013). WikiQA query logs IR, sentence 3047
(Yang et al., 2015) selection

In contrast to prior datasets, SQuAD does not TREC-QA query logs + IR, free form 1479
provide a list of answer choices for each question. (Voorhees and Tice, 2000) human editor

Rather, systems must select the answer from all pos- CNN/Daily Mail summary + RC, fill in 1.4M
(Hermann et al., 2015)

sible spans in the passage, thus needing to cope with cloze single entity
CBT cloze RC, fill in 688K

a fairly large number of candidates. While ques- (Hill et al., 2015) single word
tions with span-based answers are more constrained Table 1: A survey of several reading comprehension and ques-
than the more interpretative questions found in more tion answering datasets. SQuAD is much larger than all datasets
advanced standardized tests, we still find a rich di- except the semi-synthetic cloze-style datasets, and it is similar
versity of questions and answer types in SQuAD. to TREC-QA in the open-endedness of the answers.
We develop automatic techniques based on distances
in dependency trees to quantify this diversity and
stratify the questions by difficulty. The span con- 2 Existing Datasets
straint also comes with the important benefit that We begin with a survey of existing reading com-
span-based answers are easier to evaluate than free- prehension and question answering (QA) datasets,
form answers. highlighting a variety of task formulation and cre-

To assess the difficulty of SQuAD, we imple- ation strategies (see Table 1 for an overview).
mented a logistic regression model with a range of
features. We find that lexicalized and dependency Reading comprehension. A data-driven approach
tree path features are important to the performance to reading comprehension goes back to Hirschman
of the model. We also find that the model perfor- et al. (1999), who curated a dataset of 600 real 3rd–
mance worsens with increasing complexity of (i) an- 6th grade reading comprehension questions. Their
swer types and (ii) syntactic divergence between the pattern matching baseline was subsequently im-
question and the sentence containing the answer; in- proved by a rule-based system (Riloff and Thelen,
terestingly, there is no such degradation for humans. 2000) and a logistic regression model (Ng et al.,
Our best model achieves an F1 score of 51.0%,1 2000). More recently, Richardson et al. (2013) cu-
which is much better than the sliding window base- rated MCTest, which contains 660 stories created
line (20%). Over the last four months (since June by crowdworkers, with 4 questions per story and
2016), we have witnessed significant improvements 4 answer choices per question. Because many of
from more sophisticated neural network-based mod- the questions require commonsense reasoning and
els. For example, Wang and Jiang (2016) obtained reasoning across multiple sentences, the dataset re-
70.3% F1 on SQuAD v1.1 (results on v1.0 are sim- mains quite challenging, though there has been no-
ilar). These results are still well behind human ticeable progress (Narasimhan and Barzilay, 2015;
performance, which is 86.8% F1 based on inter- Sachan et al., 2015; Wang et al., 2015). Both curated
annotator agreement. This suggests that there is datasets, although real and difficult, are too small to
plenty of room for advancement in modeling and support very expressive statistical models.
learning on the SQuAD dataset. Some datasets focus on deeper reasoning abili-

ties. Algebra word problems require understanding
1All experimental results in this paper are on SQuAD v1.0. a story well enough to turn it into a system of equa-



tions, which can be easily solved to produce the an-
swer (Kushman et al., 2014; Hosseini et al., 2014).
BAbI (Weston et al., 2015), a fully synthetic RC
dataset, is stratified by different types of reasoning
required to solve each task. Clark and Etzioni (2016)
describe the task of solving 4th grade science exams,
and stress the need to reason with world knowledge.

Open-domain question answering. The goal of
open-domain QA is to answer a question from a
large collection of documents. The annual eval-
uations at the Text REtreival Conference (TREC)
(Voorhees and Tice, 2000) led to many advances
in open-domain QA, many of which were used in
IBM Watson for Jeopardy! (Ferrucci et al., 2013).
Recently, Yang et al. (2015) created the WikiQA
dataset, which, like SQuAD, use Wikipedia pas-
sages as a source of answers, but their task is sen- Figure 2: The crowd-facing web interface used to collect the
tence selection, while ours requires selecting a spe- dataset encourages crowdworkers to use their own words while
cific span in the sentence. asking questions.

Selecting the span of text that answers a question
is similar to answer extraction, the final step in the
open-domain QA pipeline, methods for which in- concluded that performance is almost saturated.

clude bootstrapping surface patterns (Ravichandran One difference between SQuAD questions and

and Hovy, 2002), using dependency trees (Shen and cloze-style queries is that answers to cloze queries

Klakow, 2006), and using a factor graph over mul- are single words or entities, while answers in

tiple sentences (Sun et al., 2013). One key differ- SQuAD often include non-entities and can be much

ence between our RC setting and answer extraction longer phrases. Another difference is that SQuAD

is that answer extraction typically exploits the fact focuses on questions whose answers are entailed

that the answer occurs in multiple documents (Brill by the passage, whereas the answers to cloze-style

et al., 2002), which is more lenient than in our set- queries are merely suggested by the passage.

ting, where a system only has access to a single read- 3 Dataset Collection
ing passage.

We collect our dataset in three stages: curating
Cloze datasets. Recently, researchers have con- passages, crowdsourcing question-answers on those
structed cloze datasets, in which the goal is to pre- passages, and obtaining additional answers.
dict the missing word (often a named entity) in a
passage. Since these datasets can be automatically Passage curation. To retrieve high-quality arti-
generated from naturally occurring data, they can be cles, we used Project Nayuki’s Wikipedia’s internal
extremely large. The Children’s Book Test (CBT) PageRanks to obtain the top 10000 articles of En-
(Hill et al., 2015), for example, involves predicting glish Wikipedia, from which we sampled 536 arti-
a blanked-out word of a sentence given the 20 previ- cles uniformly at random. From each of these ar-
ous sentences. Hermann et al. (2015) constructed a ticles, we extracted individual paragraphs, stripping
corpus of cloze style questions by blanking out enti- away images, figures, tables, and discarding para-
ties in abstractive summaries of CNN / Daily News graphs shorter than 500 characters. The result was
articles; the goal is to fill in the entity based on the 23,215 paragraphs for the 536 articles covering a
original article. While the size of this dataset is im- wide range of topics, from musical celebrities to ab-
pressive, Chen et al. (2016) showed that the dataset stract concepts. We partitioned the articles randomly
requires less reasoning than previously thought, and into a training set (80%), a development set (10%),



and a test set (10%). Answer type Percentage Example

Date 8.9% 19 October 1512
Other Numeric 10.9% 12

Question-answer collection. Next, we employed Person 12.9% Thomas Coke
crowdworkers to create questions. We used the Location 4.4% Germany
Daemo platform (Gaikwad et al., 2015), with Ama- Other Entity 15.3% ABC Sports

Common Noun Phrase 31.8% property damage
zon Mechanical Turk as its backend. Crowdworkers Adjective Phrase 3.9% second-largest
were required to have a 97% HIT acceptance rate, a Verb Phrase 5.5% returned to Earth
minimum of 1000 HITs, and be located in the United Clause 3.7% to avoid trivialization
States or Canada. Workers were asked to spend 4 Other 2.7% quietly

minutes on every paragraph, and paid $9 per hour for
Table 2: We automatically partition our answers into the fol-

the number of hours required to complete the article.
lowing categories. Our dataset consists of large number of an-

The task was reviewed favorably by crowdworkers,
swers beyond proper noun entities.

receiving positive comments on Turkopticon.
On each paragraph, crowdworkers were tasked

with asking and answering up to 5 questions on the 4 Dataset Analysis
content of that paragraph. The questions had to be To understand the properties of SQuAD, we analyze
entered in a text field, and the answers had to be the questions and answers in the development set.
highlighted in the paragraph. To guide the work- Specifically, we explore the (i) diversity of answer
ers, tasks contained a sample paragraph, and exam- types, (ii) the difficulty of questions in terms of type
ples of good and bad questions and answers on that of reasoning required to answer them, and (iii) the
paragraph along with the reasons they were cate- degree of syntactic divergence between the question
gorized as such. Additionally, crowdworkers were and answer sentences.
encouraged to ask questions in their own words,
without copying word phrases from the paragraph. Diversity in answers. We automatically catego-
On the interface, this was reinforced by a reminder rize the answers as follows: We first separate
prompt at the beginning of every paragraph, and by the numerical and non-numerical answers. The
disabling copy-paste functionality on the paragraph non-numerical answers are categorized using con-
text. stituency parses and POS tags generated by Stan-

ford CoreNLP. The proper noun phrases are further
split into person, location and other entities using

Additional answers collection. To get an indica- NER tags. In Table 2, we can see dates and other
tion of human performance on SQuAD and to make numbers make up 19.8% of the data; 32.6% of the
our evaluation more robust, we obtained at least 2 answers are proper nouns of three different types;
additional answers for each question in the develop- 31.8% are common noun phrases answers; and the
ment and test sets. In the secondary answer gener- remaining 15.8% are made up of adjective phrases,
ation task, each crowdworker was shown only the verb phrases, clauses and other types.
questions along with the paragraphs of an article,
and asked to select the shortest span in the para- Reasoning required to answer questions. To get
graph that answered the question. If a question was a better understanding of the reasoning required to
not answerable by a span in the paragraph, workers answer the questions, we sampled 4 questions from
were asked to submit the question without marking each of the 48 articles in the development set, and
an answer. Workers were recommended a speed of 5 then manually labeled the examples with the cate-
questions for 2 minutes, and paid at the same rate of gories shown in Table 3. The results show that
$9 per hour for the number of hours required for the all examples have some sort of lexical or syntactic
entire article. Over the development and test sets, divergence between the question and the answer in
2.6% of questions were marked unanswerable by at the passage. Note that some examples fall into more
least one of the additional crowdworkers. than one category.



Reasoning Description Example Percentage

Lexical variation Major correspondences between Q: What is the Rankine cycle sometimes called? 33.3%
(synonymy) the question and the answer sen- Sentence: The Rankine cycle is sometimes re-

tence are synonyms. ferred to as a practical Carnot cycle.

Lexical variation Major correspondences between Q: Which governing bodies have veto power? 9.1%
(world knowledge) the question and the answer sen- Sen.: The European Parliament and the Council of

tence require world knowledge to the European Union have powers of amendment
resolve. and veto during the legislative process.

Syntactic variation After the question is paraphrased Q: What Shakespeare scholar is currently on the 64.1%
into declarative form, its syntac- faculty?
tic dependency structure does not Sen.: Current faculty include the anthropol-
match that of the answer sentence ogist Marshall Sahlins, ..., Shakespeare scholar
even after local modifications. David Bevington.

Multiple sentence There is anaphora, or higher-level Q: What collection does the V&A Theatre & Per- 13.6%
reasoning fusion of multiple sentences is re- formance galleries hold?

quired. Sen.: The V&A Theatre & Performance gal-
leries opened in March 2009. ... They
hold the UK’s biggest national collection of
material about live performance.

Ambiguous We don’t agree with the crowd- Q: What is the main goal of criminal punishment? 6.1%
workers’ answer, or the question Sen.: Achieving crime control via incapacitation
does not have a unique answer. and deterrence is a major goal of criminal punish-

ment.

Table 3: We manually labeled 192 examples into one or more of the above categories. Words relevant to the corresponding
reasoning type are bolded, and the crowdsourced answer is underlined.

Q: What department store is thought to be the first in the world? the anchor “first” in the question to the wh-word
S: Bainbridge’s is often cited as the world’s first department store. “what”, and the other from the anchor in the answer
Path: sentence and to the answer span “Bainbridge’s”, are

n
first ←x−co−m−−p −−su−b−jp−a→ss −detthought store −→what

⇓ then extracted from the dependency parse trees. We
delete ⇓substitute ⇓insert

it distance between these two paths,
first ←a−m−o−d ←nmo−d nsu a

store −− cited −−−b−jp−→ss measure the ed
Bainbridge’s

which we define as the minimum number of dele-
Edit cost:

1 +2 +1=4 tions or insertions to transform one path into the
Figure 3: An example walking through the computation of the other. The syntactic divergence is then defined as
syntactic divergence between the question Q and answer sen- the minimum edit distance over all possible anchors.
tence S. The histogram in Figure 4a shows that there is a

wide range of syntactic divergence in our dataset.
We also show a concrete example where the edit dis-

Stratification by syntactic divergence. We also tance is 0 and another where it is 6. Note that our
develop an automatic method to quantify the syntac- syntactic divergence ignores lexical variation. Also,
tic divergence between a question and the sentence small divergence does not mean that a question is
containing the answer. This provides another way to easy since there could be other candidates with sim-
measure the difficulty of a question and to stratify ilarly small divergence.
the dataset, which we return to in Section 6.3.

We illustrate how we measure the divergence with
the example in Figure 3. We first detect anchors 5 Methods
(word-lemma pairs common to both the question
and answer sentences); in the example, the anchor We developed a logistic regression model and com-
is “first”. The two unlexicalized paths, one from pare its accuracy with that of three baseline methods.



30.0 Q: Who went to Wittenberg to hear Luther speak?
S: Students thronged to Wittenberg to hear Luther

25.0
speak.

20.0 Path:
15.0 Wittenberg ←n−m−o−d t −n−s−u→bj

wen Who
ns j

10.0 Wittenberg ←n−m−o−d thronged −−−u→b Students
5.0

0.0
0 1 2 3 4 5 6 7 8 (b) An example of a question-answer pair with edit distance 0 be-

Syntactic divergence
tween the dependency paths (note that lexical variation is ignored

(a) Histogram of syntactic divergence. in the computation of edit distance).

Q: What impact did the high school education movement have on the presence of skilled workers?
S: During the mass high school education movement from 1910 – 1940 , there was an increase in skilled workers.
Path:

b d
school ←c−om−p−ou−n−d ovement ←n−su

m −−j −−o→bj
have impact −d→et What

←cschool −om−p−ou−n−d movement −n−m−o→d 1910 −a→cl wa −n−s−u→bj
s increase

(c) An example of a question-answer pair with edit distance 6.

Figure 4: We use the edit distance between the unlexicalized dependency paths in the question and the sentence containing the
answer to measure syntactic divergence.

Candidate answer generation. For all four meth- 5.2 Logistic Regression
ods, rather than considering all O(L2) spans as can-
didate answers, where L is the number of words In our logistic regression model, we extract several
in the sentence, we only use spans which are con- types of features for each candidate answer. We
stituents in the constituency parse generated by discretize each continuous feature into 10 equally-
Stanford CoreNLP. Ignoring punctuation and arti- sized buckets, building a total of 180 million fea-
cles, we find that 77.3% of the correct answers in the tures, most of which are lexicalized features or de-
development set are constituents. This places an ef- pendency tree path features. The descriptions and
fective ceiling on the accuracy of our methods. Dur- examples of the features are summarized in Table 4.
ing training, when the correct answer of an example The matching word and bigram frequencies as
is not a constituent, we use the shortest constituent well as the root match features help the model pick
containing the correct answer as the target. the correct sentences. Length features bias the

model towards picking common lengths and posi-
5.1 Sliding Window Baseline tions for answer spans, while span word frequencies
For each candidate answer, we compute the uni- bias the model against uninformative words. Con-
gram/bigram overlap between the sentence contain- stituent label and span POS tag features guide the
ing it (excluding the candidate itself) and the ques- model towards the correct answer types. In addi-
tion. We keep all the candidates that have the max- tion to these basic features, we resolve lexical vari-
imal overlap. Among these, we select the best ation using lexicalized features, and syntactic varia-
one using the sliding-window approach proposed tion using dependency tree path features.
in Richardson et al. (2013). The multiclass log-likelihood loss is optimized

In addition to the basic sliding window ap- using AdaGrad with an initial learning rate of 0.1.
proach, we also implemented the distance-based ex- Each update is performed on the batch of all ques-
tension (Richardson et al., 2013). Whereas Richard- tions in a paragraph for efficiency, since they share
son et al. (2013) used the entire passage as the con- the same candidates. L2 regularization is used, with
text of an answer, we used only the sentence con- a coefficient of 0.1 divided by the number of batches.
taining the candidate answer for efficiency. The model is trained with three passes over the train-

Percentage



Feature Groups Description Examples

Matching Word Sum of the TF-IDF of the words that occur in both the question and the Span: [0 ≤ sum < 0.01]
Frequencies sentence containing the candidate answer. Separate features are used Left: [7.9 ≤ sum < 10.7]

for the words to the left, to the right, inside the span, and in the whole
sentence.

Matching Bigram Same as above, but using bigrams. We use the generalization of the Span: [0 ≤ sum < 2.4]
Frequencies TF-IDF described in Shirakawa et al. (2015). Left: [0 ≤ sum < 2.7]

Root Match Whether the dependency parse tree roots of the question and sentence Root Match = False
match, whether the sentence contains the root of the dependency parse
tree of the question, and whether the question contains the root of the
dependency parse tree of the sentence.

Lengths Number of words to the left, to the right, inside the span, and in the Span: [1 <= num < 2]
whole sentence. Left: [15 ≤ num < 19]

Span Word Sum of the TF-IDF of the words in the span, regardless of whether they Span: [5.2 ≤ sum < 6.9]
Frequencies appear in the question.
Constituent Label Constituency parse tree label of the span, optionally combined with the Span: NP

wh-word in the question. Span: NP, wh-word: “what”
Span POS Tags Sequence of the part-of-speech tags in the span, optionally combined Span: [NN]

with the wh-word in the question. Span: [NN], wh-word: “what”
Lexicalized Lemmas of question words combined with the lemmas of words within Q: “cause”, S: “under”←c−as−e

distance 2 to the span in the sentence based on the dependency parse Q: “fall”, A: “gravity”
trees. Separately, question word lemmas combined with answer word
lemmas.

Dependency Tree For each word that occurs in both the question and sentence, the path VBZ −n−m−o→d NN
←ns−u−bj

Paths in the dependency parse tree from that word in the sentence to the span, what VBZ −a−dv→cl

optionally combined with the path from the wh-word to the word in the + VBZ−n−m−o→d NN
question. POS tags are included in the paths.

Table 4: Features used in the logistic regression model with examples for the question “What causes precipitation to fall?”, sentence
“In meteorology, precipitation is any product of the condensation of atmospheric water vapor that falls under gravity.” and answer
“gravity”. Q denotes question, A denotes candidate answer, and S denotes sentence containing the candidate answer.

ing data. 6.2 Human Performance
We assess human performance on SQuAD’s devel-

6 Experiments opment and test sets. Recall that each of the ques-
6.1 Model Evaluation tions in these sets has at least three answers. To eval-

uate human performance, we treat the second an-
We use two different metrics to evaluate model accu- swer to each question as the human prediction, and
racy. Both metrics ignore punctuations and articles keep the other answers as ground truth answers. The
(a, an, the). resulting human performance score on the test set is
Exact match. This metric measures the percent- 77.0% for the exact match metric, and 86.8% for F1.
age of predictions that match any one of the ground Mismatch occurs mostly due to inclusion/exclusion
truth answers exactly. of non-essential phrases (e.g., monsoon trough ver-

sus movement of the monsoon trough) rather than
(Macro-averaged) F1 score. This metric mea- fundamental disagreements about the answer.
sures the average overlap between the prediction and
ground truth answer. We treat the prediction and 6.3 Model Performance
ground truth as bags of tokens, and compute their Table 5 shows the performance of our models along-
F1. We take the maximum F1 over all of the ground side human performance on the v1.0 of development
truth answers for a given question, and then average and test sets. The logistic regression model signifi-
over all of the questions. cantly outperforms the baselines, but underperforms



Exact Match F1 Logistic Regression Human

Dev Test Dev Test Dev F1 Dev F1

Random Guess 1.1% 1.3% 4.1% 4.3% Date 72.1% 93.9%

Sliding Window 13.2% 12.5% 20.2% 19.7% Other Numeric 62.5% 92.9%

Sliding Win. + Dist. 13.3% 13.0% 20.2% 20.0% Person 56.2% 95.4%

Logistic Regression 40.0% 40.4% 51.0% 51.0% Location 55.4% 94.1%

Human 80.3% 77.0% 90.5% 86.8% Other Entity 52.2% 92.6%
Common Noun Phrase 46.5% 88.3%

Table 5: Performance of various methods and humans. Logis- Adjective Phrase 37.9% 86.8%
tic regression outperforms the baselines, while there is still a Verb Phrase 31.2% 82.4%
significant gap between humans. Clause 34.3% 84.5%

Other 34.8% 86.1%

F Table 7: Performance stratified by answer types. Logistic re-
1

gression performs better on certain types of answers, namely
Train Dev

numbers and entities. On the other hand, human performance is
Logistic Regression 91.7% 51.0% more uniform.
– Lex., – Dep. Paths 33.9% 35.8%
– Lexicalized 53.5% 45.4%

100
– Dep. Paths 91.4% 46.4%
– Match. Word Freq. 91.7% 48.1% 90

– Span POS Tags 91.7% 49.7% 80
– Match. Bigram Freq. 91.7% 50.3%
– Constituent Label 91.7% 50.4% 70

– Lengths 91.8% 50.5% 60

– Span Word Freq. 91.7% 50.5%
50

– Root Match 91.7% 50.6%
40

Table 6: Performance with feature ablations. We find that lexi- Logistic Regression Dev F1
30

calized and dependency tree path features are most important. Human Dev F1
20

0 1 2 3 4 5 6 7 8
Syntactic divergence

humans. We note that the model is able to select
the sentence containing the answer correctly with Figure 5: Performance stratified by syntactic divergence of

79.3% accuracy; hence, the bulk of the difficulty lies questions and sentences. The performance of logistic regres-

in finding the exact span within the sentence. sion degrades with increasing divergence. In contrast, human
performance is stable across the full range of divergence.

Feature ablations. In order to understand the fea-
tures that are responsible for the performance of the
logistic regression model, we perform a feature ab- the answer types explored in Table 2. The re-
lation where we remove one group of features from sults (shown in Table 7) show that the model per-
our model at a time. The results, shown in Table 6, forms best on dates and other numbers, categories
indicate that lexicalized and dependency tree path for which there are usually only a few plausible can-
features are most important. Comparing our analy- didates, and most answers are single tokens. The
sis to the one in Chen et al. (2016), we note that the model is challenged more on other named entities
dependency tree path features play a much bigger (i.e., location, person and other entities) because
role in our dataset. Additionally, we note that with there are many more plausible candidates. How-
lexicalized features, the model significantly overfits ever, named entities are still relatively easy to iden-
the training set; however, we found that increasing tify by their POS tag features. The model performs
L2 regularization hurts performance on the develop- worst on other answer types, which together form
ment set. 47.6% of the dataset. Humans have exceptional per-

formance on dates, numbers and all named entities.
Performance stratified by answer type. To gain Their performance on other answer types degrades
more insight into the performance of our logistic re- only slightly.
gression model, we report its performance across

Preformance (%)



Performance stratified by syntactic divergence. References
As discussed in Section 4, another challenging as- J. Berant, V. Srikumar, P. Chen, A. V. Linden, B. Harding,
pect of the dataset is the syntactic divergence be- B. Huang, P. Clark, and C. D. Manning. 2014. Mod-
tween the question and answer sentence. Figure 5 eling biological processes for reading comprehension.
shows that the more divergence there is, the lower In Empirical Methods in Natural Language Process-
the performance of the logistic regression model. ing (EMNLP).
Interestingly, humans do not seem to be sensitive E. Brill, S. Dumais, and M. Banko. 2002. An analysis of
to syntactic divergence, suggesting that deep under- the AskMSR question-answering system. In Associa-
standing is not distracted by superficial differences. tion for Computational Linguistics (ACL), pages 257–

264.
Measuring the degree of degradation could therefore D. Chen, J. Bolton, and C. D. Manning. 2016. A
be useful in determining the extent to which a model thorough examination of the CNN / Daily Mail read-
is generalizing in the right way. ing comprehension task. In Association for Computa-

tional Linguistics (ACL).
7 Conclusion P. Clark and O. Etzioni. 2016. My computer is an honor

student but how intelligent is it? standardized tests as
Towards the end goal of natural language under- a measure of AI. AI Magazine, 37(1):5–12.
standing, we introduce the Stanford Question An- J. Deng, W. Dong, R. Socher, L. Li, K. Li, and L. Fei-
swering Dataset, a large reading comprehension Fei. 2009. ImageNet: A large-scale hierarchical im-

age database. In Computer Vision and Pattern Recog-
dataset on Wikipedia articles with crowdsourced nition (CVPR), pages 248–255.
question-answer pairs. SQuAD features a diverse D. Ferrucci, E. Brown, J. Chu-Carroll, J. Fan, D. Gondek,
range of question and answer types. The perfor- A. A. Kalyanpur, A. Lally, J. W. Murdock, E. Nyberg,
mance of our logistic regression model, with 51.0% J. Prager, N. Schlaefer, and C. Welty. 2013. Build-
F1, against the human F1 of 86.8% suggests ample ing Watson: An overview of the DeepQA project. AI
opportunity for improvement. We have made our Magazine, 31(3):59–79.
dataset freely available to encourage exploration of S. N. Gaikwad, D. Morina, R. Nistala, M. Agarwal,
more expressive models. Since the release of our A. Cossette, R. Bhanu, S. Savage, V. Narwal, K. Raj-
dataset, we have already seen considerable interest pal, J. Regino, et al. 2015. Daemo: A self-governed

crowdsourcing marketplace. In Proceedings of the
in building models on this dataset, and the gap be- 28th Annual ACM Symposium on User Interface Soft-
tween our logistic regression model and human per- ware & Technology, pages 101–102.
formance has more than halved (Wang and Jiang, K. M. Hermann, T. Kočiský, E. Grefenstette, L. Espeholt,
2016). We expect that the remaining gap will be W. Kay, M. Suleyman, and P. Blunsom. 2015. Teach-
harder to close, but that such efforts will result in ing machines to read and comprehend. In Advances in
significant advances in reading comprehension. Neural Information Processing Systems (NIPS).

F. Hill, A. Bordes, S. Chopra, and J. Weston. 2015.

Reproducibility The goldilocks principle: Reading children’s books
with explicit memory representations. In International
Conference on Learning Representations (ICLR).

All code, data, and experiments for this paper are L. Hirschman, M. Light, E. Breck, and J. D. Burger.
available on the CodaLab platform: 1999. Deep read: A reading comprehension system.
https://worksheets.codalab.org/worksheets/ In Association for Computational Linguistics (ACL),
0xd53d03a48ef64b329c16b9baf0f99b0c/ . pages 325–332.

M. J. Hosseini, H. Hajishirzi, O. Etzioni, and N. Kush-
Acknowledgments man. 2014. Learning to solve arithmetic word prob-

lems with verb categorization. In Empirical Meth-
We would like to thank Durim Morina and Professor ods in Natural Language Processing (EMNLP), pages

523–533.
Michael Bernstein for their help in crowdsourcing N. Kushman, Y. Artzi, L. Zettlemoyer, and R. Barzilay.
the collection of our dataset, both in terms of fund- 2014. Learning to automatically solve algebra word
ing and technical support of the Daemo platform. problems. In Association for Computational Linguis-

tics (ACL).



M. P. Marcus, M. A. Marcinkiewicz, and B. Santorini. J. Weston, A. Bordes, S. Chopra, and T. Mikolov. 2015.
1993. Building a large annotated corpus of En- Towards AI-complete question answering: A set of
glish: the Penn Treebank. Computational Linguistics, prerequisite toy tasks. arXiv.
19:313–330. Y. Yang, W. Yih, and C. Meek. 2015. WikiQA: A chal-

K. Narasimhan and R. Barzilay. 2015. Machine compre- lenge dataset for open-domain question answering. In
hension with discourse relations. In Association for Empirical Methods in Natural Language Processing
Computational Linguistics (ACL). (EMNLP), pages 2013–2018.

H. T. Ng, L. H. Teo, and J. L. P. Kwan. 2000. A machine
learning approach to answering questions for reading
comprehension tests. In Joint SIGDAT conference on
empirical methods in natural language processing and
very large corpora - Volume 13, pages 124–132.

D. Ravichandran and E. Hovy. 2002. Learning surface
text patterns for a question answering system. In As-
sociation for Computational Linguistics (ACL), pages
41–47.

M. Richardson, C. J. Burges, and E. Renshaw. 2013.
Mctest: A challenge dataset for the open-domain ma-
chine comprehension of text. In Empirical Methods in
Natural Language Processing (EMNLP), pages 193–
203.

E. Riloff and M. Thelen. 2000. A rule-based question
answering system for reading comprehension tests. In
ANLP/NAACL Workshop on reading comprehension
tests as evaluation for computer-based language un-
derstanding sytems - Volume 6, pages 13–19.

M. Sachan, A. Dubey, E. P. Xing, and M. Richardson.
2015. Learning answer-entailing structures for ma-
chine comprehension. In Association for Computa-
tional Linguistics (ACL).

D. Shen and D. Klakow. 2006. Exploring correlation of
dependency relation paths for answer extraction. In In-
ternational Conference on Computational Linguistics
and Association for Computational Linguistics (COL-
ING/ACL), pages 889–896.

M. Shirakawa, T. Hara, and S. Nishio. 2015. N-gram idf:
A global term weighting scheme based on information
distance. In World Wide Web (WWW), pages 960–970.

H. Sun, N. Duan, Y. Duan, and M. Zhou. 2013. Answer
extraction from passage graph for question answering.
In International Joint Conference on Artificial Intelli-
gence (IJCAI).

E. M. Voorhees and D. M. Tice. 2000. Building a ques-
tion answering test collection. In ACM Special Interest
Group on Information Retreival (SIGIR), pages 200–
207.

Shuohang Wang and Jing Jiang. 2016. Machine compre-
hension using match-lstm and answer pointer. CoRR,
abs/1608.07905.

H. Wang, M. Bansal, K. Gimpel, and D. McAllester.
2015. Machine comprehension with syntax, frames,
and semantics. In Association for Computational Lin-
guistics (ACL).